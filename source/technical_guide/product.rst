
Module Products & Pricelists (*product*)
========================================
:Module: product
:Name: Products & Pricelists
:Version: 5.0.1.1
:Directory: product
:Web: 

Description
-----------

::
  
    
      This is the base module to manage products and pricelists in Open ERP.
  
      Products support variants, different pricing methods, suppliers
      information, make to stock/order, different unit of measures,
      packagings and properties.
  
      Pricelists supports:
      * Multiple-level of discount (by product, category, quantities)
      * Compute price based on different criteria:
          * Other pricelist,
          * Cost price,
          * List price,
          * Supplier price, ...
      Pricelists preferences by product and/or partners.
  
      Print product labels with barcode.
      

Reports
-------

 * Products Labels

Menus
-------

 * Products

 * Products/Configuration

 * Products/Products

 * Products/Products by Category

 * Products/Configuration/Products Categories

 * Products/Configuration/Units of Measure

 * Products/Configuration/Units of Measure/Units of Measure

 * Products/Configuration/Units of Measure/Units of Measure Categories

 * Products/Configuration/Packagings

 * Products/Pricelists

 * Products/Pricelists/Pricelist Versions

 * Products/Pricelists/Pricelists

 * Products/Configuration/Prices Computations

 * Products/Configuration/Prices Computations/Prices Types

 * Products/Configuration/Prices Computations/Pricelists Types

Views
-----

 * product.product.tree (tree)

 * product.normal.form (form)

 * product.category.form (form)

 * product.category.list (tree)

 * product.category.tree (tree)

 * product.uom.tree (tree)

 * product.uom.form (form)

 * product.uom.categ.form (form)

 * product.ul.form.view (form)

 * product.ul.tree (tree)

 * product.packaging.tree.view (tree)

 * product.packaging.form.view (form)

 * product.supplierinfo.form.view (form)

 * product.supplierinfo.tree.view (tree)

 * product.variant.form (form)

 * product.variant.tree (tree)

 * product.template.product.tree (tree)

 * product.template.product.form (form)

 * product.pricelist.version.form (form)

 * product.pricelist.version.tree (tree)

 * product.pricelist.item.tree (tree)

 * product.pricelist.item.form (form)

 * product.pricelist.tree (tree)

 * product.pricelist.form (form)

 * product.price.type.form (form)

 * product.pricelist.type.form (form)

 * \* INHERIT res.partner.product.property.form.inherit (form)

Dependencies
------------

 * base - installed

 * process - installed

Objects
-------

Product uom categ
#################


:name: Name, char, required




Product Unit of Measure
#######################


:name: Name, char, required




:factor_inv: Factor, float

    *The coefficient for the formula:
    coef (base unit) = 1 (this unit). Factor = 1 / Rate.*


:rounding: Rounding Precision, float, required

    *The computed quantity will be a multiple of this value. Use 1.0 for products that can not be splitted.*


:factor: Rate, float, required

    *The coefficient for the formula:
    1 (base unit) = coef (this unit). Rate = 1 / Factor.*


:active: Active, boolean




:category_id: UoM Category, many2one, required

    *Unit of Measure of the same category can be converted between each others.*


:factor_inv_data: Factor, float




Shipping Unit
#############


:type: Type, selection, required




:name: Name, char, required




Product Category
################


:property_account_expense_categ: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product category*


:property_stock_journal: Stock journal, many2one

    *This journal will be used for the accounting move generated by stock move*


:name: Name, char, required




:sequence: Sequence, integer




:property_stock_account_input_categ: Stock Input Account, many2one

    *This account will be used to value the input stock*


:parent_id: Parent Category, many2one




:complete_name: Name, char, readonly




:property_account_income_categ: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product category*


:child_id: Childs Categories, one2many




:property_stock_account_output_categ: Stock Output Account, many2one

    *This account will be used to value the output stock*


Product Template
################


:warranty: Warranty (months), float




:property_stock_procurement: Procurement Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by procurements*


:supply_method: Supply method, selection, required

    *Produce will generate production order or tasks, according to the product type. Purchase will trigger purchase orders when requested.*


:uos_id: Unit of Sale, many2one

    *Used by companies that manages two unit of measure: invoicing and stock management. For example, in food industries, you will manage a stock of ham but invoice in Kg. Keep empty to use the default UOM.*


:list_price: Sale Price, float

    *Base price for computing the customer price. Sometimes called the catalog price.*


:weight: Gross weight, float

    *The gross weight in Kg.*


:standard_price: Cost Price, float, required

    *The cost of the product for accounting stock valorisation. It can serves as a base price for supplier price.*


:mes_type: Measure Type, selection, required




:uom_id: Default UoM, many2one, required

    *Default Unit of Measure used for all stock operation.*


:description_purchase: Purchase Description, text




:property_account_income: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*


:uos_coeff: UOM -> UOS Coeff, float

    *Coefficient to convert UOM to UOS
    uom = uos * coeff*


:sale_ok: Can be sold, boolean

    *Determine if the product can be visible in the list of product within a selection from a sale order line.*


:purchase_ok: Can be Purchased, boolean

    *Determine if the product is visible in the list of products within a selection from a purchase order line.*


:product_manager: Product Manager, many2one




:company_id: Company, many2one




:produce_delay: Manufacturing Lead Time, float

    *Average time to produce this product. This is only for the production order and, if it is a multi-level bill of material, it's only for the level of this product. Different delays will be summed for all levels and purchase orders.*


:state: Status, selection

    *Tells the user if he can use the product or not.*


:loc_rack: Rack, char




:uom_po_id: Purchase UoM, many2one, required

    *Default Unit of Measure used for purchase orders. It must in the same category than the default unit of measure.*


:type: Product Type, selection, required

    *Will change the way procurements are processed, consumable are stockable products with infinite stock, or without a stock management in the system.*


:property_stock_account_input: Stock Input Account, many2one

    *This account will be used, instead of the default one, to value input stock*


:loc_case: Case, char




:description: Description, text




:weight_net: Net weight, float

    *The net weight in Kg.*


:property_stock_production: Production Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by production orders*


:supplier_taxes_id: Supplier Taxes, many2many




:volume: Volume, float

    *The volume in m3.*


:procure_method: Procure Method, selection, required

    *'Make to Stock': When needed, take from the stock or wait until refurnishing. 'Make to Order': When needed, purchase or produce for the procurement request.*


:property_stock_inventory: Inventory Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory*


:cost_method: Costing Method, selection, required

    *Standard Price: the cost price is fixed and recomputed periodically (usually at the end of the year), Average Price: the cost price is recomputed at each reception of products.*


:loc_row: Row, char




:seller_delay: Supplier Lead Time, integer, readonly

    *This is the average delay in days between the purchase order confirmation and the reception of goods for this product and for the default supplier. It is used by the scheduler to order requests based on reordering delays.*


:rental: Rentable product, boolean




:sale_delay: Customer Lead Time, float

    *This is the average time between the confirmation of the customer order and the delivery of the finnished products. It's the time you promise to your customers.*


:name: Name, char, required




:description_sale: Sale Description, text




:property_account_expense: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*


:categ_id: Category, many2one, required




:taxes_id: Customer Taxes, many2many




:property_stock_account_output: Stock Output Account, many2one

    *This account will be used, instead of the default one, to value output stock*


:seller_ids: Partners, one2many




Product
#######


:warranty: Warranty (months), float




:property_stock_procurement: Procurement Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by procurements*


:supply_method: Supply method, selection, required

    *Produce will generate production order or tasks, according to the product type. Purchase will trigger purchase orders when requested.*


:uos_id: Unit of Sale, many2one

    *Used by companies that manages two unit of measure: invoicing and stock management. For example, in food industries, you will manage a stock of ham but invoice in Kg. Keep empty to use the default UOM.*


:list_price: Sale Price, float

    *Base price for computing the customer price. Sometimes called the catalog price.*


:weight: Gross weight, float

    *The gross weight in Kg.*


:ean13: EAN13, char




:incoming_qty: Incoming, float, readonly

    *Quantities of products that are planned to arrive in selected locations or all internal if none have been selected.*


:standard_price: Cost Price, float, required

    *The cost of the product for accounting stock valorisation. It can serves as a base price for supplier price.*


:price_extra: Variant Price Extra, float




:mes_type: Measure Type, selection, required




:uom_id: Default UoM, many2one, required

    *Default Unit of Measure used for all stock operation.*


:code: Code, char, readonly




:description_purchase: Purchase Description, text




:default_code: Code, char




:property_account_income: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*


:qty_available: Real Stock, float, readonly

    *Current quantities of products in selected locations or all internal if none have been selected.*


:price: Customer Price, float, readonly




:variants: Variants, char




:track_incoming: Track Incomming Lots, boolean

    *Force to use a Production Lot during receptions*


:uos_coeff: UOM -> UOS Coeff, float

    *Coefficient to convert UOM to UOS
    uom = uos * coeff*


:product_tmpl_id: Product Template, many2one, required




:virtual_available: Virtual Stock, float, readonly

    *Futur stock for this product according to the selected location or all internal if none have been selected. Computed as: Real Stock - Outgoing + Incoming.*


:sale_ok: Can be sold, boolean

    *Determine if the product can be visible in the list of product within a selection from a sale order line.*


:purchase_ok: Can be Purchased, boolean

    *Determine if the product is visible in the list of products within a selection from a purchase order line.*


:product_manager: Product Manager, many2one




:track_outgoing: Track Outging Lots, boolean

    *Force to use a Production Lot during deliveries*


:company_id: Company, many2one




:name: Name, char, required




:active: Active, boolean




:state: Status, selection

    *Tells the user if he can use the product or not.*


:loc_rack: Rack, char




:uom_po_id: Purchase UoM, many2one, required

    *Default Unit of Measure used for purchase orders. It must in the same category than the default unit of measure.*


:type: Product Type, selection, required

    *Will change the way procurements are processed, consumable are stockable products with infinite stock, or without a stock management in the system.*


:property_stock_account_input: Stock Input Account, many2one

    *This account will be used, instead of the default one, to value input stock*


:description: Description, text




:weight_net: Net weight, float

    *The net weight in Kg.*


:property_stock_production: Production Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by production orders*


:supplier_taxes_id: Supplier Taxes, many2many




:volume: Volume, float

    *The volume in m3.*


:outgoing_qty: Outgoing, float, readonly

    *Quantities of products that are planned to leave in selected locations or all internal if none have been selected.*


:description_sale: Sale Description, text




:procure_method: Procure Method, selection, required

    *'Make to Stock': When needed, take from the stock or wait until refurnishing. 'Make to Order': When needed, purchase or produce for the procurement request.*


:property_stock_inventory: Inventory Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory*


:cost_method: Costing Method, selection, required

    *Standard Price: the cost price is fixed and recomputed periodically (usually at the end of the year), Average Price: the cost price is recomputed at each reception of products.*


:partner_ref: Customer ref, char, readonly




:loc_row: Row, char




:path_ids: Location Paths, one2many

    *These rules set the right path of the product in the whole location tree.*


:seller_delay: Supplier Lead Time, integer, readonly

    *This is the average delay in days between the purchase order confirmation and the reception of goods for this product and for the default supplier. It is used by the scheduler to order requests based on reordering delays.*


:rental: Rentable product, boolean




:packaging: Logistical Units, one2many

    *Gives the different ways to package the same product. This has no impact on the packing order and is mainly used if you use the EDI module.*


:sale_delay: Customer Lead Time, float

    *This is the average time between the confirmation of the customer order and the delivery of the finnished products. It's the time you promise to your customers.*


:loc_case: Case, char




:produce_delay: Manufacturing Lead Time, float

    *Average time to produce this product. This is only for the production order and, if it is a multi-level bill of material, it's only for the level of this product. Different delays will be summed for all levels and purchase orders.*


:property_account_expense: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*


:categ_id: Category, many2one, required




:track_production: Track Production Lots, boolean

    *Force to use a Production Lot during production order*


:lst_price: List Price, float, readonly




:taxes_id: Customer Taxes, many2many




:property_stock_account_output: Stock Output Account, many2one

    *This account will be used, instead of the default one, to value output stock*


:seller_ids: Partners, one2many




:price_margin: Variant Price Margin, float




Packaging
#########


:rows: Number of Layer, integer, required

    *The number of layer on a palet or box*


:name: Description, char




:weight: Total Package Weight, float

    *The weight of a full of products palet or box.*


:ean: EAN, char

    *The EAN code of the package unit.*


:ul_qty: Package by layer, integer




:sequence: Sequence, integer




:qty: Quantity by Package, float

    *The total number of products you can put by palet or box.*


:ul: Type of Package, many2one, required




:length: Length, float

    *The length of the package*


:code: Code, char

    *The code of the transport unit.*


:width: Width, float

    *The width of the package*


:height: Height, float

    *The height of the package*


:weight_ul: Empty Package Weight, float

    *The weight of the empty UL*


:product_id: Product, many2one, required




Information about a product supplier
####################################


:pricelist_ids: Supplier Pricelist, one2many




:product_id: Product, many2one, required




:sequence: Priority, integer




:qty: Minimal Quantity, float, required

    *The minimal quantity to purchase for this supplier, expressed in the default unit of measure.*


:delay: Delivery Delay, integer, required

    *Delay in days between the confirmation of the purchase order and the reception of the products in your warehouse. Used by the scheduler for automatic computation of the purchase order planning.*


:product_code: Partner Product Code, char

    *Code of the product for this partner, will be used when printing a request for quotation. Keep empty to use the internal one.*


:product_name: Partner Product Name, char

    *Name of the product for this partner, will be used when printing a request for quotation. Keep empty to use the internal one.*


:name: Partner, many2one, required

    *Supplier of this product*


pricelist.partnerinfo
#####################


:min_quantity: Quantity, float, required




:price: Unit Price, float, required




:suppinfo_id: Partner Information, many2one, required




:name: Description, char




Price type
##########


:active: Active, boolean




:field: Product Field, selection, required

    *Associated field in the product form.*


:currency_id: Currency, many2one, required

    *The currency the field is expressed in.*


:name: Price Name, char, required

    *Name of this kind of price.*


Pricelist Type
##############


:name: Name, char, required




:key: Key, char, required

    *Used in the code to select specific prices based on the context. Keep unchanged.*


Pricelist
#########


:active: Active, boolean




:currency_id: Currency, many2one, required




:type: Pricelist Type, selection, required




:name: Pricelist Name, char, required




:version_id: Pricelist Versions, one2many




Pricelist Version
#################


:items_id: Price List Items, one2many, required




:name: Name, char, required




:date_end: End Date, date

    *Ending date for validity of this pricelist version.*


:date_start: Start Date, date

    *Starting date for validity of this pricelist version.*


:active: Active, boolean




:pricelist_id: Price List, many2one, required




Pricelist item
##############


:price_round: Price Rounding, float

    *Sets the price so that it is a multiple of this value.
    Rounding is applied after the discount and before the surcharge.
    To have prices that ends by 9.99, set rounding 10, surcharge -0.01*


:price_min_margin: Price Min. Margin, float




:name: Rule Name, char

    *Explicit rule name for this pricelist line.*


:base_pricelist_id: If Other Pricelist, many2one




:sequence: Sequence, integer, required




:price_max_margin: Price Max. Margin, float




:product_tmpl_id: Product Template, many2one

    *Set a template if this rule only apply to a template of product. Keep empty for all products*


:base: Based on, selection, required

    *The mode of computation of the price for this rule.*


:price_discount: Price Discount, float




:price_version_id: Price List Version, many2one, required




:min_quantity: Min. Quantity, integer, required

    *The rule only apply if the partner buys/sells more than this quantity.*


:price_surcharge: Price Surcharge, float




:categ_id: Product Category, many2one

    *Set a category of product if this rule only apply to products of a category and his childs. Keep empty for all products*


:product_id: Product, many2one

    *Set a product if this rule only apply to one product. Keep empty for all products*
