
.. module:: product
    :synopsis: Products & Pricelists (Official, Quality Certified)
    :noindex:
.. 

.. raw:: html

    <link rel="stylesheet" href="../_static/hide_objects_in_sidebar.css" type="text/css" />

Products & Pricelists (*product*)
=================================
:Module: product
:Name: Products & Pricelists
:Version: 5.0.1.1
:Author: Tiny
:Directory: product
:Web: 
:Official module: yes
:Quality certified: yes

Description
-----------

::

  This is the base module to manage products and pricelists in Open ERP.
  
      Products support variants, different pricing methods, suppliers
      information, make to stock/order, different unit of measures,
      packagings and properties.
  
      Pricelists supports:
      * Multiple-level of discount (by product, category, quantities)
      * Compute price based on different criteria:
          * Other pricelist,
          * Cost price,
          * List price,
          * Supplier price, ...
      Pricelists preferences by product and/or partners.
  
      Print product labels with barcode.

Dependencies
------------

 * :mod:`base`
 * :mod:`process`

Reports
-------

 * Products Labels

Menus
-------

 * Books
 * Books/Configuration
 * Books/Products
 * Books/Products by Category
 * Books/Configuration/Products Categories
 * Books/Configuration/Units of Measure
 * Books/Configuration/Units of Measure/Units of Measure
 * Books/Configuration/Units of Measure/Units of Measure Categories
 * Books/Configuration/Packagings
 * Books/Pricelists
 * Books/Pricelists/Pricelist Versions
 * Books/Pricelists/Pricelists
 * Books/Configuration/Prices Computations
 * Books/Configuration/Prices Computations/Prices Types
 * Books/Configuration/Prices Computations/Pricelists Types

Views
-----

 * product.product.tree (tree)
 * product.normal.form (form)
 * product.category.form (form)
 * product.category.list (tree)
 * product.category.tree (tree)
 * product.uom.tree (tree)
 * product.uom.form (form)
 * product.uom.categ.form (form)
 * product.ul.form.view (form)
 * product.ul.tree (tree)
 * product.packaging.tree.view (tree)
 * product.packaging.form.view (form)
 * product.supplierinfo.form.view (form)
 * product.supplierinfo.tree.view (tree)
 * product.variant.form (form)
 * product.variant.tree (tree)
 * product.template.product.tree (tree)
 * product.template.product.form (form)
 * product.pricelist.version.form (form)
 * product.pricelist.version.tree (tree)
 * product.pricelist.item.tree (tree)
 * product.pricelist.item.form (form)
 * product.pricelist.tree (tree)
 * product.pricelist.form (form)
 * product.price.type.form (form)
 * product.pricelist.type.form (form)
 * \* INHERIT res.partner.product.property.form.inherit (form)


Objects
-------

Object: Product uom categ (product.uom.categ)
#############################################



:name: Name, char, required




Object: Product Unit of Measure (product.uom)
#############################################



:name: Name, char, required





:factor_inv: Factor, float

    *The coefficient for the formula:
    coef (base unit) = 1 (this unit). Factor = 1 / Rate.*



:rounding: Rounding Precision, float, required

    *The computed quantity will be a multiple of this value. Use 1.0 for products that can not be splitted.*



:factor: Rate, float, required

    *The coefficient for the formula:
    1 (base unit) = coef (this unit). Rate = 1 / Factor.*



:active: Active, boolean





:category_id: UoM Category, many2one, required

    *Unit of Measure of the same category can be converted between each others.*



:factor_inv_data: Factor, float




Object: Shipping Unit (product.ul)
##################################



:type: Type, selection, required





:name: Name, char, required




Object: Product Category (product.category)
###########################################



:property_account_expense_categ: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product category*



:property_stock_journal: Stock journal, many2one

    *This journal will be used for the accounting move generated by stock move*



:isamenitype: Is amenities Type, boolean





:property_account_expense_world: Outside Europe Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:sequence: Sequence, integer





:property_account_expense_europe: Expense Account for Europe, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:ismenutype: Is Menu Type, boolean





:isservicetype: Is Service Type, boolean





:property_stock_account_input_categ: Stock Input Account, many2one

    *This account will be used to value the input stock*



:property_account_income_europe: Income Account for Europe, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:parent_id: Parent Category, many2one





:property_account_income_world: Outside Europe Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:complete_name: Name, char, readonly





:isactivitytype: Is Activity Type, boolean





:property_account_income_categ: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product category*



:child_id: Childs Categories, one2many





:isroomtype: Is Room Type, boolean





:property_stock_account_output_categ: Stock Output Account, many2one

    *This account will be used to value the output stock*



:name: Name, char, required




Object: Product Template (product.template)
###########################################



:warranty: Warranty (months), float





:property_stock_procurement: Procurement Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by procurements*



:supply_method: Supply method, selection, required

    *Produce will generate production order or tasks, according to the product type. Purchase will trigger purchase orders when requested.*



:uos_id: Unit of Sale, many2one

    *Used by companies that manages two unit of measure: invoicing and stock management. For example, in food industries, you will manage a stock of ham but invoice in Kg. Keep empty to use the default UOM.*



:list_price: Sale Price, float

    *Base price for computing the customer price. Sometimes called the catalog price.*



:weight: Gross weight, float

    *The gross weight in Kg.*



:standard_price: Cost Price, float, required

    *The cost of the product for accounting stock valorisation. It can serves as a base price for supplier price.*



:member_price: Member Price, float





:mes_type: Measure Type, selection, required





:uom_id: Default UoM, many2one, required

    *Default Unit of Measure used for all stock operation.*



:description_purchase: Purchase Description, text





:property_account_income: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:property_account_expense_world1: Outside Europe Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:uos_coeff: UOM -> UOS Coeff, float

    *Coefficient to convert UOM to UOS
    uom = uos * coeff*



:sale_ok: Can be sold, boolean

    *Determine if the product can be visible in the list of product within a selection from a sale order line.*



:auto_picking: Auto Picking for Production, boolean





:purchase_ok: Can be Purchased, boolean

    *Determine if the product is visible in the list of products within a selection from a purchase order line.*



:product_manager: Product Manager, many2one





:company_id: Company, many2one





:state: Status, selection

    *Tells the user if he can use the product or not.*



:property_account_income_world: Outside Europe Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:loc_rack: Rack, char





:uom_po_id: Purchase UoM, many2one, required

    *Default Unit of Measure used for purchase orders. It must in the same category than the default unit of measure.*



:intrastat_id: Intrastat code, many2one





:type: Product Type, selection, required

    *Will change the way procurements are processed, consumable are stockable products with infinite stock, or without a stock management in the system.*



:property_stock_account_input: Stock Input Account, many2one

    *This account will be used, instead of the default one, to value input stock*



:property_account_income_europe: Income Account for Europe, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:loc_case: Case, char





:description: Description, text





:property_account_expense_europe: Expense Account for Europe, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:weight_net: Net weight, float

    *The net weight in Kg.*



:property_stock_production: Production Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by production orders*



:supplier_taxes_id: Supplier Taxes, many2many





:volume: Volume, float

    *The volume in m3.*



:y: Y of Product, float





:cutting: Can be Cutted, boolean





:description_sale: Sale Description, text





:procure_method: Procure Method, selection, required

    *'Make to Stock': When needed, take from the stock or wait until refurnishing. 'Make to Order': When needed, purchase or produce for the procurement request.*



:property_stock_inventory: Inventory Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory*



:cost_method: Costing Method, selection, required

    *Standard Price: the cost price is fixed and recomputed periodically (usually at the end of the year), Average Price: the cost price is recomputed at each reception of products.*



:loc_row: Row, char





:seller_delay: Supplier Lead Time, integer, readonly

    *This is the average delay in days between the purchase order confirmation and the reception of goods for this product and for the default supplier. It is used by the scheduler to order requests based on reordering delays.*



:rental: Rentable product, boolean





:sale_delay: Customer Lead Time, float

    *This is the average time between the confirmation of the customer order and the delivery of the finnished products. It's the time you promise to your customers.*



:name: Name, char, required





:property_stock_account_output: Stock Output Account, many2one

    *This account will be used, instead of the default one, to value output stock*



:property_account_expense: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:categ_id: Category, many2one, required





:taxes_id: Product Taxes, many2many





:produce_delay: Manufacturing Lead Time, float

    *Average time to produce this product. This is only for the production order and, if it is a multi-level bill of material, it's only for the level of this product. Different delays will be summed for all levels and purchase orders.*



:seller_ids: Partners, one2many





:x: X of Product, float





:z: Z of Product, float




Object: Product (product.product)
#################################



:ean13: EAN UPC JPC GTIN, char





:code: Acronym, char, readonly





:pricelist_purchase: Purchase Pricelists, text, readonly





:incoming_qty: Incoming, float, readonly

    *Quantities of products that are planned to arrive in selected locations or all internal if none have been selected.*



:standard_price: Cost Price, float, required

    *The cost of the product for accounting stock valorisation. It can serves as a base price for supplier price.*



:membership_date_to: Date to, date





:size_x: Width, float





:size_y: Length, float





:size_z: Thickness, float





:property_account_income: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:isbn: Isbn code, char





:author_om_ids: Authors, one2many





:company_id: Company, many2one





:use_time: Product usetime, integer





:loc_rack: Rack, char





:ismenucard: Is Room, boolean





:price_margin: Variant Price Margin, float





:property_stock_account_input: Stock Input Account, many2one

    *This account will be used, instead of the default one, to value input stock*



:format: Format, char





:finished_test: Finished Goods testing, one2many

    *Quality Testing configuration for finished goods.*



:is_direct_delivery_from_product: Is Supplier Direct Delivery Automatic?, boolean, readonly





:cutting: Can be Cutted, boolean





:sale_num_invoiced: # Invoiced, float, readonly

    *Sum of Quantity in Customer Invoices*



:variants: Variants, char





:partner_ref: Customer ref, char, readonly





:rental: Rentable product, boolean





:purchase_num_invoiced: # Invoiced, float, readonly

    *Sum of Quantity in Supplier Invoices*



:path_ids: Location Paths, one2many

    *These rules set the right path of the product in the whole location tree.*



:packaging: Logistical Units, one2many

    *Gives the different ways to package the same product. This has no impact on the packing order and is mainly used if you use the EDI module.*



:name: Name, char, required





:qty_dispo: Stock available, float, readonly





:sale_expected: Expected Sale, float, readonly

    *Sum of Multification of Sale Catalog price and quantity of Customer Invoices*



:seller_ids: Partners, one2many





:x: X of Product, float





:rack: Rack, many2one





:isroom: Is Room, boolean





:supply_method: Supply method, selection, required

    *Produce will generate production order or tasks, according to the product type. Purchase will trigger purchase orders when requested.*



:orderpoint_ids: Orderpoints, one2many





:weight: Gross weight, float

    *The gross weight in Kg.*



:back: Reliure, selection





:creation_date: Creation date, datetime, readonly





:total_margin_rate: Total Margin (%), float, readonly

    *Total margin * 100 / Turnover*



:description_purchase: Purchase Description, text





:sales_gap: Sales Gap, float, readonly

    *Excepted Sale - Turn Over*



:manufacturer: Manufacturer, many2one





:virtual_available: Virtual Stock, float, readonly

    *Futur stock for this product according to the selected location or all internal if none have been selected. Computed as: Real Stock - Outgoing + Incoming.*



:date_retour: Return date, date





:total_cost: Total Cost, float, readonly

    *Sum of Multification of Invoice price and quantity of Supplier Invoices*



:thickness: Thickness, float





:product_tmpl_id: Product Template, many2one, required





:state: State, selection





:unique_production_number: Unique Production Number, boolean





:life_time: Product lifetime, integer





:price: Customer Price, float, readonly





:sale_avg_price: Avg. Unit Price, float, readonly

    *Avg. Price in Customer Invoices)*



:manufacturer_pname: Manufacturer product name, char





:partner_ref2: Customer ref, char, readonly





:active: Active, boolean





:loc_row: Row, char





:expected_margin_rate: Expected Margin (%), float, readonly

    *Expected margin * 100 / Expected Sale*



:seller_delay: Supplier Lead Time, integer, readonly

    *This is the average delay in days between the purchase order confirmation and the reception of goods for this product and for the default supplier. It is used by the scheduler to order requests based on reordering delays.*



:index_purchase: Purchase indexes, many2many





:loc_case: Case, char





:property_stock_account_output: Stock Output Account, many2one

    *This account will be used, instead of the default one, to value output stock*



:lst_price: List Price, float, readonly





:purchase_ok: Can be Purchased, boolean

    *Determine if the product is visible in the list of products within a selection from a purchase order line.*



:catalog_num: Catalog number, char





:tome: Tome, char





:warranty: Warranty (months), float





:property_stock_procurement: Procurement Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by procurements*



:uos_id: Unit of Sale, many2one

    *Used by companies that manages two unit of measure: invoicing and stock management. For example, in food industries, you will manage a stock of ham but invoice in Kg. Keep empty to use the default UOM.*



:list_price: Sale Price, float

    *Base price for computing the customer price. Sometimes called the catalog price.*



:purchase_line_warn_msg: Message for Purchase Order Line, text





:member_price: Member Price, float





:sale_line_warn_msg: Message for Sale Order Line, text





:mes_type: Measure Type, selection, required





:purchase_avg_price: Avg. Unit Price, float, readonly

    *Avg. Price in Supplier Invoices*



:production_test: During Production testing, one2many

    *Quality Testing configuration during production.*



:qty_available: Real Stock, float, readonly

    *Current quantities of products in selected locations or all internal if none have been selected.*



:num_pocket: Collection Num., char





:property_account_expense_world1: Outside Europe Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:uos_coeff: UOM -> UOS Coeff, float

    *Coefficient to convert UOM to UOS
    uom = uos * coeff*



:auto_pick: Auto Picking, boolean

    *Auto picking for raw materials of production orders.*



:sale_ok: Can be sold, boolean

    *Determine if the product can be visible in the list of product within a selection from a sale order line.*



:buyer_price_index: Indexed buyer price, float, readonly





:categ_id: Category, many2one, required





:product_manager: Product Manager, many2one





:width: Width, float





:pricelist_sale: Sale Pricelists, text, readonly





:normal_cost: Normal Cost, float, readonly

    *Sum of Multification of Cost price and quantity of Supplier Invoices*



:raw_m_test: Raw material testing, one2many

    *Quality Testing configuration for raw material.*



:type: Product Type, selection, required

    *Will change the way procurements are processed, consumable are stockable products with infinite stock, or without a stock management in the system.*



:property_account_income_europe: Income Account for Europe, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:editor: Editor, many2one





:author_ids: Authors, many2many





:price_cat: Price category, many2one





:num_edition: Num. edition, integer





:track_incoming: Track Incomming Lots, boolean

    *Force to use a Production Lot during receptions*



:property_stock_production: Production Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by production orders*



:supplier_taxes_id: Supplier Taxes, many2many





:removal_time: Product removal time, integer





:package_weight: Package Weight, float





:membership_date_from: Date from, date





:date_to: To Date, date, readonly





:procure_method: Procure Method, selection, required

    *'Make to Stock': When needed, take from the stock or wait until refurnishing. 'Make to Order': When needed, purchase or produce for the procurement request.*



:property_stock_inventory: Inventory Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory*



:cost_method: Costing Method, selection, required

    *Standard Price: the cost price is fixed and recomputed periodically (usually at the end of the year), Average Price: the cost price is recomputed at each reception of products.*



:sale_delay: Customer Lead Time, float

    *This is the average time between the confirmation of the customer order and the delivery of the finnished products. It's the time you promise to your customers.*



:description_sale: Sale Description, text





:purchase_line_warn: Purchase Order Line, boolean





:dimension_ids: Dimensions, many2many





:lot_ids: Lots, one2many





:z: Z of Product, float





:purchase_gap: Purchase Gap, float, readonly

    *Normal Cost - Total Cost*



:sale_line_warn: Sale Order Line, boolean





:isservice: Is Service id, boolean





:track_production: Track Production Lots, boolean

    *Force to use a Production Lot during production order*



:nbpage: Number of pages, integer





:pocket: Pocket, char





:price_extra: Variant Price Extra, float





:uom_id: Default UoM, many2one, required

    *Default Unit of Measure used for all stock operation.*



:default_code: Code, char





:attribute_ids: Attributes, one2many





:iscategid: Is categ id, boolean





:expected_margin: Expected Margin, float, readonly

    *Excepted Sale - Normal Cost*



:standard_price_index: Indexed standard price, float, readonly





:product_logo: Product Logo, binary





:auto_picking: Auto Picking for Production, boolean





:date_from: From Date, date, readonly





:track_outgoing: Track Outging Lots, boolean

    *Force to use a Production Lot during deliveries*



:length: Length, float





:property_account_income_world: Outside Europe Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:is_maintenance: Is Maintenance?, boolean





:online: Visible on website, boolean





:uom_po_id: Purchase UoM, many2one, required

    *Default Unit of Measure used for purchase orders. It must in the same category than the default unit of measure.*



:intrastat_id: Intrastat code, many2one





:description: Description, text





:list_price_index: Indexed list price, float, readonly





:property_account_expense_europe: Expense Account for Europe, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:weight_net: Net weight, float

    *The net weight in Kg.*



:index_date: Index price date, date, required





:collection: Collection, many2one





:membership: Membership, boolean

    *Specify if this product is a membership product*



:manufacturer_pref: Manufacturer product code, char





:lang: Language, many2many





:volume: Volume, float

    *The volume in m3.*



:link_ids: Related Books, many2many





:equivalency_in_A4: A4 Equivalency, float





:url: Image URL, char

    *Add Product Image URL.*



:produce_delay: Manufacturing Lead Time, float

    *Average time to produce this product. This is only for the production order and, if it is a multi-level bill of material, it's only for the level of this product. Different delays will be summed for all levels and purchase orders.*



:property_account_expense: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:calculate_price: Compute price, boolean





:invoice_state: Invoice State, selection, readonly





:outgoing_qty: Outgoing, float, readonly

    *Quantities of products that are planned to leave in selected locations or all internal if none have been selected.*



:alert_time: Product alert time, integer





:taxes_id: Product Taxes, many2many





:y: Y of Product, float





:date_parution: Release date, date





:total_margin: Total Margin, float, readonly

    *Turnorder - Total Cost*



:index_sale: Sales indexes, many2many





:buyer_price: Buyer price, float





:turnover: Turnover, float, readonly

    *Sum of Multification of Invoice price and quantity of Customer Invoices*


Object: Packaging (product.packaging)
#####################################



:rows: Number of Layer, integer, required

    *The number of layer on a palet or box*



:name: Description, char





:weight: Total Package Weight, float

    *The weight of a full of products palet or box.*



:ean: EAN, char

    *The EAN code of the package unit.*



:ul_qty: Package by layer, integer





:sequence: Sequence, integer





:qty: Quantity by Package, float

    *The total number of products you can put by palet or box.*



:ul: Type of Package, many2one, required





:length: Length, float

    *The length of the package*



:code: Code, char

    *The code of the transport unit.*



:width: Width, float

    *The width of the package*



:height: Height, float

    *The height of the package*



:weight_ul: Empty Package Weight, float

    *The weight of the empty UL*



:product_id: Product, many2one, required




Object: Information about a product supplier (product.supplierinfo)
###################################################################



:pricelist_ids: Supplier Pricelist, one2many





:last_order_date: Last Order date, date, readonly





:product_id: Product, many2one, required





:sequence: Priority, integer





:qty: Minimal Quantity, float, required

    *The minimal quantity to purchase for this supplier, expressed in the default unit of measure.*



:delay: Delivery Delay, integer, required

    *Delay in days between the confirmation of the purchase order and the reception of the products in your warehouse. Used by the scheduler for automatic computation of the purchase order planning.*



:last_order: Last Order, many2one, readonly





:direct_delivery_flag: Direct delivery possible ?, boolean





:product_code: Partner Product Code, char

    *Code of the product for this partner, will be used when printing a request for quotation. Keep empty to use the internal one.*



:product_name: Partner Product Name, char

    *Name of the product for this partner, will be used when printing a request for quotation. Keep empty to use the internal one.*



:name: Partner, many2one, required

    *Supplier of this product*


Object: pricelist.partnerinfo (pricelist.partnerinfo)
#####################################################



:min_quantity: Quantity, float, required





:price: Unit Price, float, required





:suppinfo_id: Partner Information, many2one, required





:name: Description, char




Object: Price type (product.price.type)
#######################################



:active: Active, boolean





:field: Product Field, selection, required

    *Associated field in the product form.*



:currency_id: Currency, many2one, required

    *The currency the field is expressed in.*



:name: Price Name, char, required

    *Name of this kind of price.*


Object: Pricelist Type (product.pricelist.type)
###############################################



:name: Name, char, required





:key: Key, char, required

    *Used in the code to select specific prices based on the context. Keep unchanged.*


Object: Pricelist (product.pricelist)
#####################################



:visible_discount: Visible Discount, boolean





:name: Pricelist Name, char, required





:version_id: Pricelist Versions, one2many





:currency_id: Currency, many2one, required





:active: Active, boolean





:type: Pricelist Type, selection, required




Object: Pricelist Version (product.pricelist.version)
#####################################################



:items_id: Price List Items, one2many, required





:name: Name, char, required





:date_end: End Date, date

    *Ending date for validity of this pricelist version.*



:date_start: Start Date, date

    *Starting date for validity of this pricelist version.*



:active: Active, boolean





:pricelist_id: Price List, many2one, required





:offer_name: OfferName, char




Object: Pricelist item (product.pricelist.item)
###############################################



:price_round: Price Rounding, float

    *Sets the price so that it is a multiple of this value.
    Rounding is applied after the discount and before the surcharge.
    To have prices that ends by 9.99, set rounding 10, surcharge -0.01*



:price_min_margin: Price Min. Margin, float





:name: Rule Name, char

    *Explicit rule name for this pricelist line.*



:base_pricelist_id: If Other Pricelist, many2one





:sequence: Sequence, integer, required





:price_max_margin: Price Max. Margin, float





:product_tmpl_id: Product Template, many2one

    *Set a template if this rule only apply to a template of product. Keep empty for all products*



:base: Based on, selection, required

    *The mode of computation of the price for this rule.*



:price_discount: Price Discount, float





:price_version_id: Price List Version, many2one, required





:min_quantity: Min. Quantity, integer, required

    *The rule only apply if the partner buys/sells more than this quantity.*



:price_surcharge: Price Surcharge, float





:categ_id: Product Category, many2one

    *Set a category of product if this rule only apply to products of a category and his childs. Keep empty for all products*



:product_id: Product, many2one

    *Set a product if this rule only apply to one product. Keep empty for all products*
