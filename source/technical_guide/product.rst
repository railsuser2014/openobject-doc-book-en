
Module Products & Pricelists (*product*)
========================================
:Module: product
:Name: Products & Pricelists
:Version: 5.0.1.1
:Directory: product
:Web: 

Description
-----------

::

  This is the base module to manage products and pricelists in Open ERP.
  
      Products support variants, different pricing methods, suppliers
      information, make to stock/order, different unit of measures,
      packagings and properties.
  
      Pricelists supports:
      * Multiple-level of discount (by product, category, quantities)
      * Compute price based on different criteria:
          * Other pricelist,
          * Cost price,
          * List price,
          * Supplier price, ...
      Pricelists preferences by product and/or partners.
  
      Print product labels with barcode.

Dependencies
------------

 * base - installed
 * process - installed

Reports
-------

 * Products Labels

Menus
-------

 * Products
 * Products/Configuration
 * Products/Products
 * Products/Products by Category
 * Products/Configuration/Products Categories
 * Products/Configuration/Units of Measure
 * Products/Configuration/Units of Measure/Units of Measure
 * Products/Configuration/Units of Measure/Units of Measure Categories
 * Products/Configuration/Packagings
 * Products/Pricelists
 * Products/Pricelists/Pricelist Versions
 * Products/Pricelists/Pricelists
 * Products/Configuration/Prices Computations
 * Products/Configuration/Prices Computations/Prices Types
 * Products/Configuration/Prices Computations/Pricelists Types

Views
-----

 * product.product.tree (tree)
 * product.normal.form (form)
 * product.category.form (form)
 * product.category.list (tree)
 * product.category.tree (tree)
 * product.uom.tree (tree)
 * product.uom.form (form)
 * product.uom.categ.form (form)
 * product.ul.form.view (form)
 * product.ul.tree (tree)
 * product.packaging.tree.view (tree)
 * product.packaging.form.view (form)
 * product.supplierinfo.form.view (form)
 * product.supplierinfo.tree.view (tree)
 * product.variant.form (form)
 * product.variant.tree (tree)
 * product.template.product.tree (tree)
 * product.template.product.form (form)
 * product.pricelist.version.form (form)
 * product.pricelist.version.tree (tree)
 * product.pricelist.item.tree (tree)
 * product.pricelist.item.form (form)
 * product.pricelist.tree (tree)
 * product.pricelist.form (form)
 * product.price.type.form (form)
 * product.pricelist.type.form (form)
 * \* INHERIT res.partner.product.property.form.inherit (form)


Objects
-------

Object: Product uom categ
#########################

.. index::
  single: Product uom categ object
.. 


:name: Name, char, required



.. index::
  single: name field
.. 



Object: Product Unit of Measure
###############################

.. index::
  single: Product Unit of Measure object
.. 


:name: Name, char, required



.. index::
  single: name field
.. 




:factor_inv: Factor, float

    *The coefficient for the formula:
    coef (base unit) = 1 (this unit). Factor = 1 / Rate.*

.. index::
  single: factor_inv field
.. 




:rounding: Rounding Precision, float, required

    *The computed quantity will be a multiple of this value. Use 1.0 for products that can not be splitted.*

.. index::
  single: rounding field
.. 




:factor: Rate, float, required

    *The coefficient for the formula:
    1 (base unit) = coef (this unit). Rate = 1 / Factor.*

.. index::
  single: factor field
.. 




:active: Active, boolean



.. index::
  single: active field
.. 




:category_id: UoM Category, many2one, required

    *Unit of Measure of the same category can be converted between each others.*

.. index::
  single: category_id field
.. 




:factor_inv_data: Factor, float



.. index::
  single: factor_inv_data field
.. 



Object: Shipping Unit
#####################

.. index::
  single: Shipping Unit object
.. 


:type: Type, selection, required



.. index::
  single: type field
.. 




:name: Name, char, required



.. index::
  single: name field
.. 



Object: Product Category
########################

.. index::
  single: Product Category object
.. 


:property_account_expense_categ: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product category*

.. index::
  single: property_account_expense_categ field
.. 




:property_stock_journal: Stock journal, many2one

    *This journal will be used for the accounting move generated by stock move*

.. index::
  single: property_stock_journal field
.. 




:isamenitype: Is amenities Type, boolean



.. index::
  single: isamenitype field
.. 




:property_account_expense_world: Outside Europe Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*

.. index::
  single: property_account_expense_world field
.. 




:sequence: Sequence, integer



.. index::
  single: sequence field
.. 




:property_account_expense_europe: Expense Account for Europe, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*

.. index::
  single: property_account_expense_europe field
.. 




:ismenutype: Is Menu Type, boolean



.. index::
  single: ismenutype field
.. 




:isservicetype: Is Service Type, boolean



.. index::
  single: isservicetype field
.. 




:property_stock_account_input_categ: Stock Input Account, many2one

    *This account will be used to value the input stock*

.. index::
  single: property_stock_account_input_categ field
.. 




:property_account_income_europe: Income Account for Europe, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*

.. index::
  single: property_account_income_europe field
.. 




:parent_id: Parent Category, many2one



.. index::
  single: parent_id field
.. 




:property_account_income_world: Outside Europe Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*

.. index::
  single: property_account_income_world field
.. 




:complete_name: Name, char, readonly



.. index::
  single: complete_name field
.. 




:isactivitytype: Is Activity Type, boolean



.. index::
  single: isactivitytype field
.. 




:property_account_income_categ: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product category*

.. index::
  single: property_account_income_categ field
.. 




:child_id: Childs Categories, one2many



.. index::
  single: child_id field
.. 




:isroomtype: Is Room Type, boolean



.. index::
  single: isroomtype field
.. 




:property_stock_account_output_categ: Stock Output Account, many2one

    *This account will be used to value the output stock*

.. index::
  single: property_stock_account_output_categ field
.. 




:name: Name, char, required



.. index::
  single: name field
.. 



Object: Product Template
########################

.. index::
  single: Product Template object
.. 


:warranty: Warranty (months), float



.. index::
  single: warranty field
.. 




:property_stock_procurement: Procurement Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by procurements*

.. index::
  single: property_stock_procurement field
.. 




:supply_method: Supply method, selection, required

    *Produce will generate production order or tasks, according to the product type. Purchase will trigger purchase orders when requested.*

.. index::
  single: supply_method field
.. 




:uos_id: Unit of Sale, many2one

    *Used by companies that manages two unit of measure: invoicing and stock management. For example, in food industries, you will manage a stock of ham but invoice in Kg. Keep empty to use the default UOM.*

.. index::
  single: uos_id field
.. 




:list_price: Sale Price, float

    *Base price for computing the customer price. Sometimes called the catalog price.*

.. index::
  single: list_price field
.. 




:weight: Gross weight, float

    *The gross weight in Kg.*

.. index::
  single: weight field
.. 




:standard_price: Cost Price, float, required

    *The cost of the product for accounting stock valorisation. It can serves as a base price for supplier price.*

.. index::
  single: standard_price field
.. 




:member_price: Member Price, float



.. index::
  single: member_price field
.. 




:mes_type: Measure Type, selection, required



.. index::
  single: mes_type field
.. 




:uom_id: Default UoM, many2one, required

    *Default Unit of Measure used for all stock operation.*

.. index::
  single: uom_id field
.. 




:description_purchase: Purchase Description, text



.. index::
  single: description_purchase field
.. 




:property_account_income: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*

.. index::
  single: property_account_income field
.. 




:property_account_expense_world1: Outside Europe Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*

.. index::
  single: property_account_expense_world1 field
.. 




:uos_coeff: UOM -> UOS Coeff, float

    *Coefficient to convert UOM to UOS
    uom = uos * coeff*

.. index::
  single: uos_coeff field
.. 




:sale_ok: Can be sold, boolean

    *Determine if the product can be visible in the list of product within a selection from a sale order line.*

.. index::
  single: sale_ok field
.. 




:auto_picking: Auto Picking for Production, boolean



.. index::
  single: auto_picking field
.. 




:purchase_ok: Can be Purchased, boolean

    *Determine if the product is visible in the list of products within a selection from a purchase order line.*

.. index::
  single: purchase_ok field
.. 




:product_manager: Product Manager, many2one



.. index::
  single: product_manager field
.. 




:company_id: Company, many2one



.. index::
  single: company_id field
.. 




:state: Status, selection

    *Tells the user if he can use the product or not.*

.. index::
  single: state field
.. 




:property_account_income_world: Outside Europe Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*

.. index::
  single: property_account_income_world field
.. 




:loc_rack: Rack, char



.. index::
  single: loc_rack field
.. 




:uom_po_id: Purchase UoM, many2one, required

    *Default Unit of Measure used for purchase orders. It must in the same category than the default unit of measure.*

.. index::
  single: uom_po_id field
.. 




:intrastat_id: Intrastat code, many2one



.. index::
  single: intrastat_id field
.. 




:type: Product Type, selection, required

    *Will change the way procurements are processed, consumable are stockable products with infinite stock, or without a stock management in the system.*

.. index::
  single: type field
.. 




:property_stock_account_input: Stock Input Account, many2one

    *This account will be used, instead of the default one, to value input stock*

.. index::
  single: property_stock_account_input field
.. 




:property_account_income_europe: Income Account for Europe, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*

.. index::
  single: property_account_income_europe field
.. 




:loc_case: Case, char



.. index::
  single: loc_case field
.. 




:description: Description, text



.. index::
  single: description field
.. 




:property_account_expense_europe: Expense Account for Europe, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*

.. index::
  single: property_account_expense_europe field
.. 




:weight_net: Net weight, float

    *The net weight in Kg.*

.. index::
  single: weight_net field
.. 




:property_stock_production: Production Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by production orders*

.. index::
  single: property_stock_production field
.. 




:supplier_taxes_id: Supplier Taxes, many2many



.. index::
  single: supplier_taxes_id field
.. 




:volume: Volume, float

    *The volume in m3.*

.. index::
  single: volume field
.. 




:y: Y of Product, float



.. index::
  single: y field
.. 




:cutting: Can be Cutted, boolean



.. index::
  single: cutting field
.. 




:description_sale: Sale Description, text



.. index::
  single: description_sale field
.. 




:procure_method: Procure Method, selection, required

    *'Make to Stock': When needed, take from the stock or wait until refurnishing. 'Make to Order': When needed, purchase or produce for the procurement request.*

.. index::
  single: procure_method field
.. 




:property_stock_inventory: Inventory Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory*

.. index::
  single: property_stock_inventory field
.. 




:cost_method: Costing Method, selection, required

    *Standard Price: the cost price is fixed and recomputed periodically (usually at the end of the year), Average Price: the cost price is recomputed at each reception of products.*

.. index::
  single: cost_method field
.. 




:loc_row: Row, char



.. index::
  single: loc_row field
.. 




:seller_delay: Supplier Lead Time, integer, readonly

    *This is the average delay in days between the purchase order confirmation and the reception of goods for this product and for the default supplier. It is used by the scheduler to order requests based on reordering delays.*

.. index::
  single: seller_delay field
.. 




:rental: Rentable product, boolean



.. index::
  single: rental field
.. 




:sale_delay: Customer Lead Time, float

    *This is the average time between the confirmation of the customer order and the delivery of the finnished products. It's the time you promise to your customers.*

.. index::
  single: sale_delay field
.. 




:name: Name, char, required



.. index::
  single: name field
.. 




:property_stock_account_output: Stock Output Account, many2one

    *This account will be used, instead of the default one, to value output stock*

.. index::
  single: property_stock_account_output field
.. 




:property_account_expense: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*

.. index::
  single: property_account_expense field
.. 




:categ_id: Category, many2one, required



.. index::
  single: categ_id field
.. 




:taxes_id: Product Taxes, many2many



.. index::
  single: taxes_id field
.. 




:produce_delay: Manufacturing Lead Time, float

    *Average time to produce this product. This is only for the production order and, if it is a multi-level bill of material, it's only for the level of this product. Different delays will be summed for all levels and purchase orders.*

.. index::
  single: produce_delay field
.. 




:seller_ids: Partners, one2many



.. index::
  single: seller_ids field
.. 




:x: X of Product, float



.. index::
  single: x field
.. 




:z: Z of Product, float



.. index::
  single: z field
.. 



Object: Product
###############

.. index::
  single: Product object
.. 


:ean13: EAN UPC JPC GTIN, char



.. index::
  single: ean13 field
.. 




:code: Acronym, char, readonly



.. index::
  single: code field
.. 




:pricelist_purchase: Purchase Pricelists, text, readonly



.. index::
  single: pricelist_purchase field
.. 




:incoming_qty: Incoming, float, readonly

    *Quantities of products that are planned to arrive in selected locations or all internal if none have been selected.*

.. index::
  single: incoming_qty field
.. 




:standard_price: Cost Price, float, required

    *The cost of the product for accounting stock valorisation. It can serves as a base price for supplier price.*

.. index::
  single: standard_price field
.. 




:membership_date_to: Date to, date



.. index::
  single: membership_date_to field
.. 




:size_x: Width, float



.. index::
  single: size_x field
.. 




:size_y: Length, float



.. index::
  single: size_y field
.. 




:size_z: Thickness, float



.. index::
  single: size_z field
.. 




:property_account_income: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*

.. index::
  single: property_account_income field
.. 




:isbn: Isbn code, char



.. index::
  single: isbn field
.. 




:author_om_ids: Authors, one2many



.. index::
  single: author_om_ids field
.. 




:company_id: Company, many2one



.. index::
  single: company_id field
.. 




:use_time: Product usetime, integer



.. index::
  single: use_time field
.. 




:loc_rack: Rack, char



.. index::
  single: loc_rack field
.. 




:ismenucard: Is Room, boolean



.. index::
  single: ismenucard field
.. 




:price_margin: Variant Price Margin, float



.. index::
  single: price_margin field
.. 




:property_stock_account_input: Stock Input Account, many2one

    *This account will be used, instead of the default one, to value input stock*

.. index::
  single: property_stock_account_input field
.. 




:format: Format, char



.. index::
  single: format field
.. 




:finished_test: Finished Goods testing, one2many

    *Quality Testing configuration for finished goods.*

.. index::
  single: finished_test field
.. 




:is_direct_delivery_from_product: Is Supplier Direct Delivery Automatic?, boolean, readonly



.. index::
  single: is_direct_delivery_from_product field
.. 




:cutting: Can be Cutted, boolean



.. index::
  single: cutting field
.. 




:sale_num_invoiced: # Invoiced, float, readonly

    *Sum of Quantity in Customer Invoices*

.. index::
  single: sale_num_invoiced field
.. 




:variants: Variants, char



.. index::
  single: variants field
.. 




:partner_ref: Customer ref, char, readonly



.. index::
  single: partner_ref field
.. 




:rental: Rentable product, boolean



.. index::
  single: rental field
.. 




:purchase_num_invoiced: # Invoiced, float, readonly

    *Sum of Quantity in Supplier Invoices*

.. index::
  single: purchase_num_invoiced field
.. 




:path_ids: Location Paths, one2many

    *These rules set the right path of the product in the whole location tree.*

.. index::
  single: path_ids field
.. 




:packaging: Logistical Units, one2many

    *Gives the different ways to package the same product. This has no impact on the packing order and is mainly used if you use the EDI module.*

.. index::
  single: packaging field
.. 




:name: Name, char, required



.. index::
  single: name field
.. 




:qty_dispo: Stock available, float, readonly



.. index::
  single: qty_dispo field
.. 




:sale_expected: Expected Sale, float, readonly

    *Sum of Multification of Sale Catalog price and quantity of Customer Invoices*

.. index::
  single: sale_expected field
.. 




:seller_ids: Partners, one2many



.. index::
  single: seller_ids field
.. 




:x: X of Product, float



.. index::
  single: x field
.. 




:rack: Rack, many2one



.. index::
  single: rack field
.. 




:isroom: Is Room, boolean



.. index::
  single: isroom field
.. 




:supply_method: Supply method, selection, required

    *Produce will generate production order or tasks, according to the product type. Purchase will trigger purchase orders when requested.*

.. index::
  single: supply_method field
.. 




:orderpoint_ids: Orderpoints, one2many



.. index::
  single: orderpoint_ids field
.. 




:weight: Gross weight, float

    *The gross weight in Kg.*

.. index::
  single: weight field
.. 




:back: Reliure, selection



.. index::
  single: back field
.. 




:creation_date: Creation date, datetime, readonly



.. index::
  single: creation_date field
.. 




:total_margin_rate: Total Margin (%), float, readonly

    *Total margin * 100 / Turnover*

.. index::
  single: total_margin_rate field
.. 




:description_purchase: Purchase Description, text



.. index::
  single: description_purchase field
.. 




:sales_gap: Sales Gap, float, readonly

    *Excepted Sale - Turn Over*

.. index::
  single: sales_gap field
.. 




:manufacturer: Manufacturer, many2one



.. index::
  single: manufacturer field
.. 




:virtual_available: Virtual Stock, float, readonly

    *Futur stock for this product according to the selected location or all internal if none have been selected. Computed as: Real Stock - Outgoing + Incoming.*

.. index::
  single: virtual_available field
.. 




:date_retour: Return date, date



.. index::
  single: date_retour field
.. 




:total_cost: Total Cost, float, readonly

    *Sum of Multification of Invoice price and quantity of Supplier Invoices*

.. index::
  single: total_cost field
.. 




:thickness: Thickness, float



.. index::
  single: thickness field
.. 




:product_tmpl_id: Product Template, many2one, required



.. index::
  single: product_tmpl_id field
.. 




:state: State, selection



.. index::
  single: state field
.. 




:unique_production_number: Unique Production Number, boolean



.. index::
  single: unique_production_number field
.. 




:life_time: Product lifetime, integer



.. index::
  single: life_time field
.. 




:price: Customer Price, float, readonly



.. index::
  single: price field
.. 




:sale_avg_price: Avg. Unit Price, float, readonly

    *Avg. Price in Customer Invoices)*

.. index::
  single: sale_avg_price field
.. 




:manufacturer_pname: Manufacturer product name, char



.. index::
  single: manufacturer_pname field
.. 




:partner_ref2: Customer ref, char, readonly



.. index::
  single: partner_ref2 field
.. 




:purchase_avg_price: Avg. Unit Price, float, readonly

    *Avg. Price in Supplier Invoices*

.. index::
  single: purchase_avg_price field
.. 




:index_purchase: Purchase indexes, many2many



.. index::
  single: index_purchase field
.. 




:expected_margin_rate: Expected Margin (%), float, readonly

    *Expected margin * 100 / Expected Sale*

.. index::
  single: expected_margin_rate field
.. 




:seller_delay: Supplier Lead Time, integer, readonly

    *This is the average delay in days between the purchase order confirmation and the reception of goods for this product and for the default supplier. It is used by the scheduler to order requests based on reordering delays.*

.. index::
  single: seller_delay field
.. 




:loc_case: Case, char



.. index::
  single: loc_case field
.. 




:property_stock_account_output: Stock Output Account, many2one

    *This account will be used, instead of the default one, to value output stock*

.. index::
  single: property_stock_account_output field
.. 




:lst_price: List Price, float, readonly



.. index::
  single: lst_price field
.. 




:purchase_ok: Can be Purchased, boolean

    *Determine if the product is visible in the list of products within a selection from a purchase order line.*

.. index::
  single: purchase_ok field
.. 




:catalog_num: Catalog number, char



.. index::
  single: catalog_num field
.. 




:tome: Tome, char



.. index::
  single: tome field
.. 




:warranty: Warranty (months), float



.. index::
  single: warranty field
.. 




:property_stock_procurement: Procurement Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by procurements*

.. index::
  single: property_stock_procurement field
.. 




:uos_id: Unit of Sale, many2one

    *Used by companies that manages two unit of measure: invoicing and stock management. For example, in food industries, you will manage a stock of ham but invoice in Kg. Keep empty to use the default UOM.*

.. index::
  single: uos_id field
.. 




:list_price: Sale Price, float

    *Base price for computing the customer price. Sometimes called the catalog price.*

.. index::
  single: list_price field
.. 




:purchase_line_warn_msg: Message for Purchase Order Line, text



.. index::
  single: purchase_line_warn_msg field
.. 




:member_price: Member Price, float



.. index::
  single: member_price field
.. 




:sale_line_warn_msg: Message for Sale Order Line, text



.. index::
  single: sale_line_warn_msg field
.. 




:mes_type: Measure Type, selection, required



.. index::
  single: mes_type field
.. 




:active: Active, boolean



.. index::
  single: active field
.. 




:production_test: During Production testing, one2many

    *Quality Testing configuration during production.*

.. index::
  single: production_test field
.. 




:qty_available: Real Stock, float, readonly

    *Current quantities of products in selected locations or all internal if none have been selected.*

.. index::
  single: qty_available field
.. 




:num_pocket: Collection Num., char



.. index::
  single: num_pocket field
.. 




:property_account_expense_world1: Outside Europe Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*

.. index::
  single: property_account_expense_world1 field
.. 




:uos_coeff: UOM -> UOS Coeff, float

    *Coefficient to convert UOM to UOS
    uom = uos * coeff*

.. index::
  single: uos_coeff field
.. 




:auto_pick: Auto Picking, boolean

    *Auto picking for raw materials of production orders.*

.. index::
  single: auto_pick field
.. 




:sale_ok: Can be sold, boolean

    *Determine if the product can be visible in the list of product within a selection from a sale order line.*

.. index::
  single: sale_ok field
.. 




:buyer_price_index: Indexed buyer price, float, readonly



.. index::
  single: buyer_price_index field
.. 




:loc_row: Row, char



.. index::
  single: loc_row field
.. 




:product_manager: Product Manager, many2one



.. index::
  single: product_manager field
.. 




:width: Width, float



.. index::
  single: width field
.. 




:pricelist_sale: Sale Pricelists, text, readonly



.. index::
  single: pricelist_sale field
.. 




:normal_cost: Normal Cost, float, readonly

    *Sum of Multification of Cost price and quantity of Supplier Invoices*

.. index::
  single: normal_cost field
.. 




:raw_m_test: Raw material testing, one2many

    *Quality Testing configuration for raw material.*

.. index::
  single: raw_m_test field
.. 




:type: Product Type, selection, required

    *Will change the way procurements are processed, consumable are stockable products with infinite stock, or without a stock management in the system.*

.. index::
  single: type field
.. 




:property_account_income_europe: Income Account for Europe, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*

.. index::
  single: property_account_income_europe field
.. 




:editor: Editor, many2one



.. index::
  single: editor field
.. 




:author_ids: Authors, many2many



.. index::
  single: author_ids field
.. 




:price_cat: Price category, many2one



.. index::
  single: price_cat field
.. 




:num_edition: Num. edition, integer



.. index::
  single: num_edition field
.. 




:track_incoming: Track Incomming Lots, boolean

    *Force to use a Production Lot during receptions*

.. index::
  single: track_incoming field
.. 




:property_stock_production: Production Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by production orders*

.. index::
  single: property_stock_production field
.. 




:supplier_taxes_id: Supplier Taxes, many2many



.. index::
  single: supplier_taxes_id field
.. 




:volume: Volume, float

    *The volume in m3.*

.. index::
  single: volume field
.. 




:package_weight: Package Weight, float



.. index::
  single: package_weight field
.. 




:membership_date_from: Date from, date



.. index::
  single: membership_date_from field
.. 




:date_to: To Date, date, readonly



.. index::
  single: date_to field
.. 




:procure_method: Procure Method, selection, required

    *'Make to Stock': When needed, take from the stock or wait until refurnishing. 'Make to Order': When needed, purchase or produce for the procurement request.*

.. index::
  single: procure_method field
.. 




:property_stock_inventory: Inventory Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory*

.. index::
  single: property_stock_inventory field
.. 




:cost_method: Costing Method, selection, required

    *Standard Price: the cost price is fixed and recomputed periodically (usually at the end of the year), Average Price: the cost price is recomputed at each reception of products.*

.. index::
  single: cost_method field
.. 




:sale_delay: Customer Lead Time, float

    *This is the average time between the confirmation of the customer order and the delivery of the finnished products. It's the time you promise to your customers.*

.. index::
  single: sale_delay field
.. 




:description_sale: Sale Description, text



.. index::
  single: description_sale field
.. 




:purchase_line_warn: Purchase Order Line, boolean



.. index::
  single: purchase_line_warn field
.. 




:dimension_ids: Dimensions, many2many



.. index::
  single: dimension_ids field
.. 




:lot_ids: Lots, one2many



.. index::
  single: lot_ids field
.. 




:z: Z of Product, float



.. index::
  single: z field
.. 




:purchase_gap: Purchase Gap, float, readonly

    *Normal Cost - Total Cost*

.. index::
  single: purchase_gap field
.. 




:sale_line_warn: Sale Order Line, boolean



.. index::
  single: sale_line_warn field
.. 




:isservice: Is Service id, boolean



.. index::
  single: isservice field
.. 




:track_production: Track Production Lots, boolean

    *Force to use a Production Lot during production order*

.. index::
  single: track_production field
.. 




:nbpage: Number of pages, integer



.. index::
  single: nbpage field
.. 




:pocket: Pocket, char



.. index::
  single: pocket field
.. 




:price_extra: Variant Price Extra, float



.. index::
  single: price_extra field
.. 




:uom_id: Default UoM, many2one, required

    *Default Unit of Measure used for all stock operation.*

.. index::
  single: uom_id field
.. 




:default_code: Code, char



.. index::
  single: default_code field
.. 




:attribute_ids: Attributes, one2many



.. index::
  single: attribute_ids field
.. 




:iscategid: Is categ id, boolean



.. index::
  single: iscategid field
.. 




:expected_margin: Expected Margin, float, readonly

    *Excepted Sale - Normal Cost*

.. index::
  single: expected_margin field
.. 




:standard_price_index: Indexed standard price, float, readonly



.. index::
  single: standard_price_index field
.. 




:product_logo: Product Logo, binary



.. index::
  single: product_logo field
.. 




:auto_picking: Auto Picking for Production, boolean



.. index::
  single: auto_picking field
.. 




:date_from: From Date, date, readonly



.. index::
  single: date_from field
.. 




:track_outgoing: Track Outging Lots, boolean

    *Force to use a Production Lot during deliveries*

.. index::
  single: track_outgoing field
.. 




:length: Length, float



.. index::
  single: length field
.. 




:property_account_income_world: Outside Europe Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*

.. index::
  single: property_account_income_world field
.. 




:is_maintenance: Is Maintenance?, boolean



.. index::
  single: is_maintenance field
.. 




:online: Visible on website, boolean



.. index::
  single: online field
.. 




:uom_po_id: Purchase UoM, many2one, required

    *Default Unit of Measure used for purchase orders. It must in the same category than the default unit of measure.*

.. index::
  single: uom_po_id field
.. 




:intrastat_id: Intrastat code, many2one



.. index::
  single: intrastat_id field
.. 




:description: Description, text



.. index::
  single: description field
.. 




:list_price_index: Indexed list price, float, readonly



.. index::
  single: list_price_index field
.. 




:property_account_expense_europe: Expense Account for Europe, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*

.. index::
  single: property_account_expense_europe field
.. 




:weight_net: Net weight, float

    *The net weight in Kg.*

.. index::
  single: weight_net field
.. 




:index_date: Index price date, date, required



.. index::
  single: index_date field
.. 




:collection: Collection, many2one



.. index::
  single: collection field
.. 




:membership: Membership, boolean

    *Specify if this product is a membership product*

.. index::
  single: membership field
.. 




:manufacturer_pref: Manufacturer product code, char



.. index::
  single: manufacturer_pref field
.. 




:categ_id: Category, many2one, required



.. index::
  single: categ_id field
.. 




:lang: Language, many2many



.. index::
  single: lang field
.. 




:removal_time: Product removal time, integer



.. index::
  single: removal_time field
.. 




:link_ids: Related Books, many2many



.. index::
  single: link_ids field
.. 




:equivalency_in_A4: A4 Equivalency, float



.. index::
  single: equivalency_in_A4 field
.. 




:url: Image URL, char

    *Add Product Image URL.*

.. index::
  single: url field
.. 




:produce_delay: Manufacturing Lead Time, float

    *Average time to produce this product. This is only for the production order and, if it is a multi-level bill of material, it's only for the level of this product. Different delays will be summed for all levels and purchase orders.*

.. index::
  single: produce_delay field
.. 




:property_account_expense: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*

.. index::
  single: property_account_expense field
.. 




:calculate_price: Compute price, boolean



.. index::
  single: calculate_price field
.. 




:invoice_state: Invoice State, selection, readonly



.. index::
  single: invoice_state field
.. 




:outgoing_qty: Outgoing, float, readonly

    *Quantities of products that are planned to leave in selected locations or all internal if none have been selected.*

.. index::
  single: outgoing_qty field
.. 




:alert_time: Product alert time, integer



.. index::
  single: alert_time field
.. 




:taxes_id: Product Taxes, many2many



.. index::
  single: taxes_id field
.. 




:y: Y of Product, float



.. index::
  single: y field
.. 




:date_parution: Release date, date



.. index::
  single: date_parution field
.. 




:total_margin: Total Margin, float, readonly

    *Turnorder - Total Cost*

.. index::
  single: total_margin field
.. 




:index_sale: Sales indexes, many2many



.. index::
  single: index_sale field
.. 




:buyer_price: Buyer price, float



.. index::
  single: buyer_price field
.. 




:turnover: Turnover, float, readonly

    *Sum of Multification of Invoice price and quantity of Customer Invoices*

.. index::
  single: turnover field
.. 



Object: Packaging
#################

.. index::
  single: Packaging object
.. 


:rows: Number of Layer, integer, required

    *The number of layer on a palet or box*

.. index::
  single: rows field
.. 




:name: Description, char



.. index::
  single: name field
.. 




:weight: Total Package Weight, float

    *The weight of a full of products palet or box.*

.. index::
  single: weight field
.. 




:ean: EAN, char

    *The EAN code of the package unit.*

.. index::
  single: ean field
.. 




:ul_qty: Package by layer, integer



.. index::
  single: ul_qty field
.. 




:sequence: Sequence, integer



.. index::
  single: sequence field
.. 




:qty: Quantity by Package, float

    *The total number of products you can put by palet or box.*

.. index::
  single: qty field
.. 




:ul: Type of Package, many2one, required



.. index::
  single: ul field
.. 




:length: Length, float

    *The length of the package*

.. index::
  single: length field
.. 




:code: Code, char

    *The code of the transport unit.*

.. index::
  single: code field
.. 




:width: Width, float

    *The width of the package*

.. index::
  single: width field
.. 




:height: Height, float

    *The height of the package*

.. index::
  single: height field
.. 




:weight_ul: Empty Package Weight, float

    *The weight of the empty UL*

.. index::
  single: weight_ul field
.. 




:product_id: Product, many2one, required



.. index::
  single: product_id field
.. 



Object: Information about a product supplier
############################################

.. index::
  single: Information about a product supplier object
.. 


:pricelist_ids: Supplier Pricelist, one2many



.. index::
  single: pricelist_ids field
.. 




:last_order_date: Last Order date, date, readonly



.. index::
  single: last_order_date field
.. 




:product_id: Product, many2one, required



.. index::
  single: product_id field
.. 




:sequence: Priority, integer



.. index::
  single: sequence field
.. 




:qty: Minimal Quantity, float, required

    *The minimal quantity to purchase for this supplier, expressed in the default unit of measure.*

.. index::
  single: qty field
.. 




:delay: Delivery Delay, integer, required

    *Delay in days between the confirmation of the purchase order and the reception of the products in your warehouse. Used by the scheduler for automatic computation of the purchase order planning.*

.. index::
  single: delay field
.. 




:last_order: Last Order, many2one, readonly



.. index::
  single: last_order field
.. 




:direct_delivery_flag: Direct delivery possible ?, boolean



.. index::
  single: direct_delivery_flag field
.. 




:product_code: Partner Product Code, char

    *Code of the product for this partner, will be used when printing a request for quotation. Keep empty to use the internal one.*

.. index::
  single: product_code field
.. 




:product_name: Partner Product Name, char

    *Name of the product for this partner, will be used when printing a request for quotation. Keep empty to use the internal one.*

.. index::
  single: product_name field
.. 




:name: Partner, many2one, required

    *Supplier of this product*

.. index::
  single: name field
.. 



Object: pricelist.partnerinfo
#############################

.. index::
  single: pricelist.partnerinfo object
.. 


:min_quantity: Quantity, float, required



.. index::
  single: min_quantity field
.. 




:price: Unit Price, float, required



.. index::
  single: price field
.. 




:suppinfo_id: Partner Information, many2one, required



.. index::
  single: suppinfo_id field
.. 




:name: Description, char



.. index::
  single: name field
.. 



Object: Price type
##################

.. index::
  single: Price type object
.. 


:active: Active, boolean



.. index::
  single: active field
.. 




:field: Product Field, selection, required

    *Associated field in the product form.*

.. index::
  single: field field
.. 




:currency_id: Currency, many2one, required

    *The currency the field is expressed in.*

.. index::
  single: currency_id field
.. 




:name: Price Name, char, required

    *Name of this kind of price.*

.. index::
  single: name field
.. 



Object: Pricelist Type
######################

.. index::
  single: Pricelist Type object
.. 


:name: Name, char, required



.. index::
  single: name field
.. 




:key: Key, char, required

    *Used in the code to select specific prices based on the context. Keep unchanged.*

.. index::
  single: key field
.. 



Object: Pricelist
#################

.. index::
  single: Pricelist object
.. 


:visible_discount: Visible Discount, boolean



.. index::
  single: visible_discount field
.. 




:name: Pricelist Name, char, required



.. index::
  single: name field
.. 




:version_id: Pricelist Versions, one2many



.. index::
  single: version_id field
.. 




:currency_id: Currency, many2one, required



.. index::
  single: currency_id field
.. 




:active: Active, boolean



.. index::
  single: active field
.. 




:type: Pricelist Type, selection, required



.. index::
  single: type field
.. 



Object: Pricelist Version
#########################

.. index::
  single: Pricelist Version object
.. 


:items_id: Price List Items, one2many, required



.. index::
  single: items_id field
.. 




:name: Name, char, required



.. index::
  single: name field
.. 




:date_end: End Date, date

    *Ending date for validity of this pricelist version.*

.. index::
  single: date_end field
.. 




:date_start: Start Date, date

    *Starting date for validity of this pricelist version.*

.. index::
  single: date_start field
.. 




:active: Active, boolean



.. index::
  single: active field
.. 




:pricelist_id: Price List, many2one, required



.. index::
  single: pricelist_id field
.. 




:offer_name: OfferName, char



.. index::
  single: offer_name field
.. 



Object: Pricelist item
######################

.. index::
  single: Pricelist item object
.. 


:price_round: Price Rounding, float

    *Sets the price so that it is a multiple of this value.
    Rounding is applied after the discount and before the surcharge.
    To have prices that ends by 9.99, set rounding 10, surcharge -0.01*

.. index::
  single: price_round field
.. 




:price_min_margin: Price Min. Margin, float



.. index::
  single: price_min_margin field
.. 




:name: Rule Name, char

    *Explicit rule name for this pricelist line.*

.. index::
  single: name field
.. 




:base_pricelist_id: If Other Pricelist, many2one



.. index::
  single: base_pricelist_id field
.. 




:sequence: Sequence, integer, required



.. index::
  single: sequence field
.. 




:price_max_margin: Price Max. Margin, float



.. index::
  single: price_max_margin field
.. 




:product_tmpl_id: Product Template, many2one

    *Set a template if this rule only apply to a template of product. Keep empty for all products*

.. index::
  single: product_tmpl_id field
.. 




:base: Based on, selection, required

    *The mode of computation of the price for this rule.*

.. index::
  single: base field
.. 




:price_discount: Price Discount, float



.. index::
  single: price_discount field
.. 




:price_version_id: Price List Version, many2one, required



.. index::
  single: price_version_id field
.. 




:min_quantity: Min. Quantity, integer, required

    *The rule only apply if the partner buys/sells more than this quantity.*

.. index::
  single: min_quantity field
.. 




:price_surcharge: Price Surcharge, float



.. index::
  single: price_surcharge field
.. 




:categ_id: Product Category, many2one

    *Set a category of product if this rule only apply to products of a category and his childs. Keep empty for all products*

.. index::
  single: categ_id field
.. 




:product_id: Product, many2one

    *Set a product if this rule only apply to one product. Keep empty for all products*

.. index::
  single: product_id field
.. 

