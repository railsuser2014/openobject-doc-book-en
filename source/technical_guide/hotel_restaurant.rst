
.. module:: hotel_restaurant
    :synopsis: Hotel Restaurant
    :noindex:
.. 

Hotel Restaurant (*hotel_restaurant*)
=====================================
:Module: hotel_restaurant
:Name: Hotel Restaurant
:Version: 5.0.1.0
:Directory: hotel_restaurant
:Web: 
:Is certified: no

Description
-----------

::

  Module for Hotel/Resort/Restaurant management. You can manage:
      * Configure Property
      * Restaurant Configuration
      * table reservation
      * Generate and process Kitchen Order ticket,
      * Payment
  
      Different reports are also provided, mainly for Restaurant.

Dependencies
------------

 * base - installed
 * hotel - installed

Reports
-------

 * Kitchen Order Tickets

 * Customer Bill

 * Table Reservation List

Menus
-------

 * Hotel Restaurant
 * Hotel Restaurant/Configuration
 * Hotel Restaurant/Configuration/Tables
 * Hotel Restaurant/Reservation
 * Hotel Restaurant/Reservation/Table Booking
 * Hotel Restaurant/Reservation/Orders
 * Hotel Restaurant/Table Order
 * Hotel Restaurant/KOT
 * Hotel Restaurant/Configuration/FoodItem Types
 * Hotel Restaurant/Configuration/Menucard
 * Hotel Restaurant/Reservation List

Views
-----

 * hotel_restaurant_tables.form (form)
 * hotel_restaurant_tables.tree (tree)
 * hotel_restaurant_reservation.form (form)
 * hotel_restaurant_reservation.tree (tree)
 * hotel_reservation_order.form (form)
 * hotel_reservation_order.tree (tree)
 * hotel_restaurant_order.form (form)
 * hotel_restaurant_order.tree (tree)
 * hotel_restaurant_kitchen_order_tickets.form (form)
 * hotel_restaurant_kitchen_order_tickets.tree (tree)
 * hotel_menucard_type_form (form)
 * hotel_menucard_type_list (tree)
 * hotel.menucard.form (form)
 * hotel.menucard.tree (tree)


Objects
-------

Object: amenities Type (hotel.menucard.type)
############################################



:menu_id: category, many2one, required





:property_account_expense_categ: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product category*



:property_stock_journal: Stock journal, many2one

    *This journal will be used for the accounting move generated by stock move*



:sequence: Sequence, integer





:property_account_expense_europe: Expense Account for Europe, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:property_stock_account_input_categ: Stock Input Account, many2one

    *This account will be used to value the input stock*



:property_account_income_categ: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product category*



:child_id: Childs Categories, one2many





:property_stock_account_output_categ: Stock Output Account, many2one

    *This account will be used to value the output stock*



:name: Name, char, required





:isactivitytype: Is Activity Type, boolean





:isroomtype: Is Room Type, boolean





:property_account_expense_world: Outside Europe Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:ismenutype: Is Menu Type, boolean





:isservicetype: Is Service Type, boolean





:parent_id: Parent Category, many2one





:property_account_income_world: Outside Europe Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:complete_name: Name, char, readonly





:isamenitype: Is amenities Type, boolean





:property_account_income_europe: Income Account for Europe, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*


Object: Hotel Menucard (hotel.menucard)
#######################################



:ean13: EAN UPC JPC GTIN, char





:code: Acronym, char, readonly





:pricelist_purchase: Purchase Pricelists, text, readonly





:incoming_qty: Incoming, float, readonly

    *Quantities of products that are planned to arrive in selected locations or all internal if none have been selected.*



:standard_price: Cost Price, float, required

    *The cost of the product for accounting stock valorisation. It can serves as a base price for supplier price.*



:membership_date_to: Date to, date





:size_x: Width, float





:size_y: Length, float





:size_z: Thickness, float





:property_account_income: Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:list_price: Sale Price, float

    *Base price for computing the customer price. Sometimes called the catalog price.*



:author_om_ids: Authors, one2many





:company_id: Company, many2one





:use_time: Product usetime, integer





:loc_rack: Rack, char





:ismenucard: Is Room, boolean





:price_margin: Variant Price Margin, float





:property_stock_account_input: Stock Input Account, many2one

    *This account will be used, instead of the default one, to value input stock*



:format: Format, char





:finished_test: Finished Goods testing, one2many

    *Quality Testing configuration for finished goods.*



:is_direct_delivery_from_product: Is Supplier Direct Delivery Automatic?, boolean, readonly





:cutting: Can be Cutted, boolean





:sale_num_invoiced: # Invoiced, float, readonly

    *Sum of Quantity in Customer Invoices*



:variants: Variants, char





:partner_ref: Customer ref, char, readonly





:rental: Rentable product, boolean





:purchase_num_invoiced: # Invoiced, float, readonly

    *Sum of Quantity in Supplier Invoices*



:path_ids: Location Paths, one2many

    *These rules set the right path of the product in the whole location tree.*



:mes_type: Measure Type, selection, required





:name: Name, char, required





:qty_dispo: Stock available, float, readonly





:sale_expected: Expected Sale, float, readonly

    *Sum of Multification of Sale Catalog price and quantity of Customer Invoices*



:seller_ids: Partners, one2many





:x: X of Product, float





:rack: Rack, many2one





:isroom: Is Room, boolean





:supply_method: Supply method, selection, required

    *Produce will generate production order or tasks, according to the product type. Purchase will trigger purchase orders when requested.*



:orderpoint_ids: Orderpoints, one2many





:weight: Gross weight, float

    *The gross weight in Kg.*



:back: Reliure, selection





:creation_date: Creation date, datetime, readonly





:total_margin_rate: Total Margin (%), float, readonly

    *Total margin * 100 / Turnover*



:description_purchase: Purchase Description, text





:sales_gap: Sales Gap, float, readonly

    *Excepted Sale - Turn Over*



:virtual_available: Virtual Stock, float, readonly

    *Futur stock for this product according to the selected location or all internal if none have been selected. Computed as: Real Stock - Outgoing + Incoming.*



:date_retour: Return date, date





:total_cost: Total Cost, float, readonly

    *Sum of Multification of Invoice price and quantity of Supplier Invoices*



:thickness: Thickness, float





:product_tmpl_id: Product Template, many2one, required





:state: State, selection





:life_time: Product lifetime, integer





:weight_net: Net weight, float

    *The net weight in Kg.*



:sale_avg_price: Avg. Unit Price, float, readonly

    *Avg. Price in Customer Invoices)*



:manufacturer_pname: Manufacturer product name, char





:partner_ref2: Customer ref, char, readonly





:active: Active, boolean





:loc_row: Row, char





:manufacturer: Manufacturer, many2one





:loc_case: Case, char





:property_stock_account_output: Stock Output Account, many2one

    *This account will be used, instead of the default one, to value output stock*



:lst_price: List Price, float, readonly





:purchase_ok: Can be Purchased, boolean

    *Determine if the product is visible in the list of products within a selection from a purchase order line.*



:catalog_num: Catalog number, char





:tome: Tome, char





:warranty: Warranty (months), float





:property_stock_procurement: Procurement Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by procurements*



:uos_id: Unit of Sale, many2one

    *Used by companies that manages two unit of measure: invoicing and stock management. For example, in food industries, you will manage a stock of ham but invoice in Kg. Keep empty to use the default UOM.*



:isbn: Isbn code, char





:purchase_line_warn_msg: Message for Purchase Order Line, text





:member_price: Member Price, float





:sale_line_warn_msg: Message for Sale Order Line, text





:packaging: Logistical Units, one2many

    *Gives the different ways to package the same product. This has no impact on the packing order and is mainly used if you use the EDI module.*



:purchase_avg_price: Avg. Unit Price, float, readonly

    *Avg. Price in Supplier Invoices*



:production_test: During Production testing, one2many

    *Quality Testing configuration during production.*



:qty_available: Real Stock, float, readonly

    *Current quantities of products in selected locations or all internal if none have been selected.*



:num_pocket: Collection Num., char





:property_account_expense_world1: Outside Europe Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:uos_coeff: UOM -> UOS Coeff, float

    *Coefficient to convert UOM to UOS
    uom = uos * coeff*



:auto_pick: Auto Picking, boolean

    *Auto picking for raw materials of production orders.*



:expected_margin_rate: Expected Margin (%), float, readonly

    *Expected margin * 100 / Expected Sale*



:buyer_price_index: Indexed buyer price, float, readonly





:index_purchase: Purchase indexes, many2many





:product_manager: Product Manager, many2one





:width: Width, float





:pricelist_sale: Sale Pricelists, text, readonly





:normal_cost: Normal Cost, float, readonly

    *Sum of Multification of Cost price and quantity of Supplier Invoices*



:raw_m_test: Raw material testing, one2many

    *Quality Testing configuration for raw material.*



:type: Product Type, selection, required

    *Will change the way procurements are processed, consumable are stockable products with infinite stock, or without a stock management in the system.*



:property_account_income_europe: Income Account for Europe, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:editor: Editor, many2one





:lang: Language, many2many





:price_cat: Price category, many2one





:num_edition: Num. edition, integer





:track_incoming: Track Incomming Lots, boolean

    *Force to use a Production Lot during receptions*



:property_stock_production: Production Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated by production orders*



:supplier_taxes_id: Supplier Taxes, many2many





:removal_time: Product removal time, integer





:package_weight: Package Weight, float





:membership_date_from: Date from, date





:date_to: To Date, date, readonly





:procure_method: Procure Method, selection, required

    *'Make to Stock': When needed, take from the stock or wait until refurnishing. 'Make to Order': When needed, purchase or produce for the procurement request.*



:property_stock_inventory: Inventory Location, many2one

    *For the current product (template), this stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory*



:cost_method: Costing Method, selection, required

    *Standard Price: the cost price is fixed and recomputed periodically (usually at the end of the year), Average Price: the cost price is recomputed at each reception of products.*



:product_id: Product_id, many2one





:volume: Volume, float

    *The volume in m3.*



:sale_delay: Customer Lead Time, float

    *This is the average time between the confirmation of the customer order and the delivery of the finnished products. It's the time you promise to your customers.*



:description_sale: Sale Description, text





:purchase_line_warn: Purchase Order Line, boolean





:dimension_ids: Dimensions, many2many





:lot_ids: Lots, one2many





:z: Z of Product, float





:purchase_gap: Purchase Gap, float, readonly

    *Normal Cost - Total Cost*



:sale_line_warn: Sale Order Line, boolean





:isservice: Is Service id, boolean





:track_production: Track Production Lots, boolean

    *Force to use a Production Lot during production order*



:sale_ok: Can be sold, boolean

    *Determine if the product can be visible in the list of product within a selection from a sale order line.*



:nbpage: Number of pages, integer





:price_extra: Variant Price Extra, float





:uom_id: Default UoM, many2one, required

    *Default Unit of Measure used for all stock operation.*



:default_code: Code, char





:attribute_ids: Attributes, one2many





:iscategid: Is categ id, boolean





:expected_margin: Expected Margin, float, readonly

    *Excepted Sale - Normal Cost*



:standard_price_index: Indexed standard price, float, readonly





:product_logo: Product Logo, binary





:auto_picking: Auto Picking for Production, boolean





:date_from: From Date, date, readonly





:track_outgoing: Track Outging Lots, boolean

    *Force to use a Production Lot during deliveries*



:length: Length, float





:turnover: Turnover, float, readonly

    *Sum of Multification of Invoice price and quantity of Customer Invoices*



:property_account_income_world: Outside Europe Income Account, many2one

    *This account will be used, instead of the default one, to value incoming stock for the current product*



:is_maintenance: Is Maintenance?, boolean





:online: Visible on website, boolean





:uom_po_id: Purchase UoM, many2one, required

    *Default Unit of Measure used for purchase orders. It must in the same category than the default unit of measure.*



:intrastat_id: Intrastat code, many2one





:description: Description, text





:list_price_index: Indexed list price, float, readonly





:property_account_expense_europe: Expense Account for Europe, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:price: Customer Price, float, readonly





:index_date: Index price date, date, required





:collection: Collection, many2one





:membership: Membership, boolean

    *Specify if this product is a membership product*



:seller_delay: Supplier Lead Time, integer, readonly

    *This is the average delay in days between the purchase order confirmation and the reception of goods for this product and for the default supplier. It is used by the scheduler to order requests based on reordering delays.*



:manufacturer_pref: Manufacturer product code, char





:categ_id: Category, many2one, required





:author_ids: Authors, many2many





:pocket: Pocket, char





:link_ids: Related Books, many2many





:equivalency_in_A4: A4 Equivalency, float





:url: Image URL, char

    *Add Product Image URL.*



:produce_delay: Manufacturing Lead Time, float

    *Average time to produce this product. This is only for the production order and, if it is a multi-level bill of material, it's only for the level of this product. Different delays will be summed for all levels and purchase orders.*



:property_account_expense: Expense Account, many2one

    *This account will be used, instead of the default one, to value outgoing stock for the current product*



:calculate_price: Compute price, boolean





:invoice_state: Invoice State, selection, readonly





:outgoing_qty: Outgoing, float, readonly

    *Quantities of products that are planned to leave in selected locations or all internal if none have been selected.*



:alert_time: Product alert time, integer





:taxes_id: Product Taxes, many2many





:y: Y of Product, float





:date_parution: Release date, date





:total_margin: Total Margin, float, readonly

    *Turnorder - Total Cost*



:index_sale: Sales indexes, many2many





:buyer_price: Buyer price, float





:unique_production_number: Unique Production Number, boolean




Object: Includes Hotel Restaurant Table (hotel.restaurant.tables)
#################################################################



:capacity: Capacity, integer





:name: Table number, char, required




Object: Includes Hotel Restaurant Reservation (hotel.restaurant.reservation)
############################################################################



:end_date: End Date, datetime, required





:room_no: Room No, many2one





:tableno: Table number, many2many





:partner_address_id: Address, many2one





:state: state, selection, required, readonly





:cname: Customer Name, many2one, required





:reservation_id: Reservation No, char, required





:start_date: Start Date, datetime, required




Object: Includes Hotel Restaurant Order (hotel.restaurant.kitchen.order.tickets)
################################################################################



:tableno: Table number, many2many





:room_no: Room No, char, readonly





:w_name: Waiter Name, char, readonly





:kot_date: Date, datetime





:orderno: Order Number, char, readonly





:resno: Reservation Number, char





:kot_list: Order List, one2many




Object: Includes Hotel Restaurant Order (hotel.restaurant.order)
################################################################



:room_no: Room No, many2one





:order_no: Order Number, char, required





:tax: Tax (%) , float





:table_no: Table number, many2many





:amount_subtotal: Subtotal, float, readonly





:o_date: Date, datetime, required





:order_list: Order List, one2many





:amount_total: Total, float, readonly





:waiter_name: Waiter Name, many2one, required




Object: Reservation Order (hotel.reservation.order)
###################################################



:date1: Date, datetime, required





:order_list: Order List, one2many





:amount_subtotal: Subtotal, float, readonly





:reservationno: Reservation No, char





:tax: Tax (%) , float





:waitername: Waiter Name, many2one





:order_number: Order No, char





:table_no: Table number, many2many





:amount_total: Total, float, readonly




Object: Includes Hotel Restaurant Order (hotel.restaurant.order.list)
#####################################################################



:o_list: unknown, many2one





:item_qty: Qty, char, required





:name: Item Name, many2one, required





:kot_order_list: unknown, many2one





:price_subtotal: Subtotal, float, readonly





:o_l: unknown, many2one





:item_rate: Rate, float


